#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "")package ${PACKAGE_NAME};#end
#parse("File Header.java")
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;

public class ${NAME} {
    public static void main(String[] args) throws Exception {
        FR fr = new FR();
        fr.flB();
    }
    public static class FR {
        private final DataInputStream in;
        private final DataOutputStream ou;
        private final int BS=1<<16,OBS=1<<16;
        private final byte[] bf,ob,by;
        private int bp,obp,br;
        private final byte s=32,m=45,z=48,l=10;
        public FR() throws IOException {
            in=new DataInputStream(System.in);
            ou=new DataOutputStream(System.out);
            bf=new byte[BS];ob=new byte[OBS];bp=br=obp=0;
            by=new byte[20];
            fiB();
        }
        public String rL() throws IOException {
            byte[] b = new byte[BS]; // input line length
            int i=0,c;
            while ((c= r())!=-1) {
                if (c <= ' ') break;
                b[i++] = (byte) c;
            }
            return new String(b, 0, i);
        }
        public char nC() throws IOException {
            byte c=r();
            while(c<=' ') {
                c=r();
            }
            return (char) c;
        }
        public int nI() throws IOException {
            int ret = 0;byte c=r();
            while (c <= ' ') {c=r();}boolean neg=(c=='-');
            if (neg) c = r();
            do { ret = (ret << 3) + (ret << 1) + (c & 15); } while ((c = r()) > 32);
            return neg ? ~ret + 1 : ret;
        }
        public long nL() throws IOException {
            long ret = 0;byte c=r();
            while (c <= ' ') {c=r();}boolean neg=(c=='-');
            if (neg) c = r();
            do { ret = (ret << 3) + (ret << 1) + (c & 15); } while ((c = r()) > 32);
            return neg ? ~ret + 1 : ret;
        }
        private void fiB() throws IOException {
            br = in.read(bf, bp = 0, BS);
            if (br == -1) bf[0] = -1;
        }
        private byte r() throws IOException {
            if (bp==br)fiB(); return bf[bp++];
        }
        private void w(byte b) {
            if(obp==ob.length) flB(); ob[obp++]=b;
        }
        private void flB() {
            if(obp != 0) {
                try { ou.write(ob, 0, obp);
                } catch (Exception e) { throw new RuntimeException(e);
                } obp = 0;
            }
        }
        private void p(int i) {
            if(i >= 0 && i <= 9) { w((byte) (i + z)); }
            else {
                if(i < 0) {w(m); i=~i+1;}int k = 0;
                while(i > 0) {by[k++] = (byte) ((i % 10) + 48); i /= 10;}
                while(k-->0) {w(by[k]);}
            }
        }
        private void p(long i) {
            if(i >= 0 && i <= 9) { w((byte) (i + z)); }
            else {
                if(i < 0) {w(m); i=~i+1;}int k = 0;
                while(i > 0) {by[k++] = (byte) ((i % 10) + 48); i /= 10;}
                while(k-->0) {w(by[k]);}
            }
        }
        private void pl(int i) {
            if(i >= 0 && i <= 9) { w((byte) (i + z)); }
            else {
                if(i < 0) {w(m);i=~i+1;}int k = 0;
                while(i > 0) {by[k++] = (byte) ((i % 10) + 48); i /= 10;}
                while(k-->0) {w(by[k]);}
            } w(l);
        }
        private void pl(byte[] buf) {
            for (byte b : buf) {
                if (b == 0) break;
                w(b);
            } w(l);
        }
        private void pl(long i) {
            if(i >= 0 && i <= 9) { w((byte) (i + z));
            } else {
                if(i < 0) {w(m);i=~i+1;}int k = 0;
                while(i > 0) { by[k++] = (byte) ((i % 10) + 48); i /= 10;}
                while(k-->0) { w(by[k]); }
            } w(l);
        }
        private void s() { w(s); }
    }
}
